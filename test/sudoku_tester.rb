require "test/unit"
require "sudoku.rb"

class SudokuTester < Test::Unit::TestCase
  
  def setup
    
    @sudokuF1 = Sudoku.new([0,1,5,0,0,4,3,2,0,
                           3,0,2,0,0,5,0,0,9,
                           0,4,0,7,0,3,1,8,5,
                           4,3,7,6,0,0,0,0,0,
                           5,0,0,0,0,1,6,4,7,
                           0,6,0,5,0,0,2,0,0,
                           0,0,0,0,0,0,0,0,1,
                           6,7,0,2,0,0,0,5,4,
                           0,5,0,3,7,0,8,6,2])  
    
    
    @sudokuF1_solved = Sudoku.new([7,1,5,9,8,4,3,2,6,
                                  3,8,2,1,6,5,4,7,9,
                                  9,4,6,7,2,3,1,8,5,
                                  4,3,7,6,9,2,5,1,8,
                                  5,2,9,8,3,1,6,4,7,
                                  8,6,1,5,4,7,2,9,3,
                                  2,9,8,4,5,6,7,3,1,
                                  6,7,3,2,1,8,9,5,4,
                                  1,5,4,3,7,9,8,6,2])
    
    @sudokuF2 = Sudoku.new([0,9,0,0,3,0,0,0,7,
                           0,0,0,6,0,7,5,0,9,
                           0,6,0,4,0,0,0,8,0,
                           0,3,0,9,0,0,0,0,0,
                           4,2,8,0,0,0,0,0,3,
                           0,0,0,7,0,0,4,2,0,
                           0,0,0,0,6,9,0,0,4,
                           9,7,2,8,0,0,0,0,0,
                           0,5,0,0,0,0,0,0,8])   
    
    
    
    @sudokuF2_solved = Sudoku.new([ 2,9,5,1,3,8,6,4,7,
                                  8,4,1,6,2,7,5,3,9,
                                  3,6,7,4,9,5,1,8,2,
                                  7,3,6,9,4,2,8,1,5,
                                  4,2,8,5,1,6,9,7,3,
                                  5,1,9,7,8,3,4,2,6,
                                  1,8,3,2,6,9,7,5,4,
                                  9,7,2,8,5,4,3,6,1,
                                  6,5,4,3,7,1,2,9,8])
    
    
    
    @sudokuF3 = Sudoku.new([0,0,0,4,0,0,0,0,8,
                           0,0,0,6,0,0,0,0,1,
                           3,1,4,7,0,0,0,0,5,
                           6,0,0,0,0,4,5,3,7,
                           5,0,0,0,0,1,0,0,0,
                           9,0,0,0,0,3,0,0,0,
                           8,5,7,0,0,0,0,0,0,
                           0,0,0,2,4,7,0,0,0,
                           0,0,0,0,0,0,7,9,3]) 
    
    
    
    @sudokuF3_solved = Sudoku.new([2,6,5,4,1,9,3,7,8,
                                  7,9,8,6,3,5,2,4,1,
                                  3,1,4,7,8,2,9,6,5,
                                  6,8,1,9,2,4,5,3,7,
                                  5,4,3,8,7,1,6,2,9,
                                  9,7,2,5,6,3,1,8,4,
                                  8,5,7,3,9,6,4,1,2,
                                  1,3,9,2,4,7,8,5,6,
                                  4,2,6,1,5,8,7,9,3])
  end
  
  
  
  def test_solve_force_1
    @sudokuF1.solve
    assert @sudokuF1 == @sudokuF1_solved
  end
  
  def test_solve_force_2
    @sudokuF2.solve
    assert @sudokuF2 == @sudokuF2_solved
  end
  
  
  def test_solve_force_3
    @sudokuF3.solve
    assert @sudokuF3 == @sudokuF3_solved
  end
  
  
  
  
end